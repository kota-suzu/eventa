# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Install Ruby (skip bundle)
      - name: Set up Ruby (no bundle yet)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: false
          working-directory: ./api

      # 2) Inject platform into Gemfile.lock
      - name: Add x86_64-linux platform
        run: bundle lock --add-platform x86_64-linux
        working-directory: ./api

      # 3) Install gems with cache
      - name: Bundle install (cache)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          working-directory: ./api

      - name: Install error_highlight
        run: gem install error_highlight -v '0.7.0'
        working-directory: ./api

      - name: RuboCop
        run: bundle exec standardrb
        working-directory: ./api

      - name: RubyCritic
        run: bundle exec rubycritic --no-browser --minimum-score 80 --format json
        working-directory: ./api

      - name: Flog Complexity Check
        run: |
          bundle exec flog -a app/**/*.rb | grep -v -E "#none|flog/method|flog total" | awk '{if ($1>20) {print; exit 1}}' || (echo "✅ 全てのメソッドが複雑度閾値内(20以下)です")
        working-directory: ./api

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: eventa_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      RAILS_ENV: test
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: rootpass
      DB_NAME: eventa_test
      REDIS_URL: redis://localhost:6379/1
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby (no bundle yet)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: false
          working-directory: ./api

      - name: Add x86_64-linux platform
        run: bundle lock --add-platform x86_64-linux
        working-directory: ./api

      - name: Bundle install (cache)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          working-directory: ./api

      - name: RSpec with SimpleCov
        run: bundle exec rspec --format progress
        working-directory: ./api

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./api/coverage
          fail_ci_if_error: true

  race-condition-test:
    runs-on: ubuntu-latest
    needs: test
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: eventa_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      RAILS_ENV: test
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: rootpass
      DB_NAME: eventa_test
      PARALLEL_TEST_PROCESSORS: 4
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby (no bundle yet)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: false
          working-directory: ./api

      - name: Add x86_64-linux platform
        run: bundle lock --add-platform x86_64-linux
        working-directory: ./api

      - name: Bundle install (cache)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          working-directory: ./api

      - name: Install parallel_tests
        run: gem install parallel_tests
        working-directory: ./api

      - name: Run Concurrent Tests
        run: |
          bundle exec rake parallel:setup
          bundle exec parallel_rspec spec/models/ticket_spec.rb:62 -- --tag concurrent
        working-directory: ./api
