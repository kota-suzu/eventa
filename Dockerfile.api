# ビルドステージ - gemのビルドとインストールを行う
FROM ruby:3.3.2-slim-bookworm AS builder
WORKDIR /app

# ビルド時の依存関係のみインストール
RUN apt-get update -qq && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    build-essential \
    default-libmysqlclient-dev \
    git \
    pkg-config \
    nodejs \
    npm \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && npm install -g yarn

# Gemfileをコピーしてbundle installを実行
COPY ./api/Gemfile* ./
RUN bundle config set --local deployment 'false' && \
    bundle install --jobs 4 --retry 3 && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git

# アプリケーションコードをコピー
COPY ./api ./

# JavaScriptアセットのコンパイルが必要な場合（package.jsonが存在する場合のみ）
RUN if [ -f package.json ]; then \
      yarn install --frozen-lockfile; \
    fi

# 環境変数の設定のみ行い、assets:precompileはスキップ（APIのみのアプリケーションのため）
ENV RAILS_ENV=production
ENV SECRET_KEY_BASE=dummy_key_for_precompile

# 本番用ステージ - 必要なランタイム依存関係のみ含める
FROM ruby:3.3.2-slim-bookworm AS runtime
WORKDIR /app  # 作業ディレクトリを/appに設定
ENV RAILS_ENV=production

# ランタイム依存関係のみインストール
RUN apt-get update -qq && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    libmariadb3 \
    tzdata \
    curl \
    nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# ビルドしたgemをコピー
COPY --from=builder /usr/local/bundle /usr/local/bundle

# アプリケーションコードをコピー
COPY --from=builder /app .

# 本番設定
RUN bundle config set --local deployment 'true' && \
    bundle config set --local without 'development test'

# ヘルスチェック用のエントリポイント
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# サーバー起動
CMD ["bin/rails", "server", "-b", "0.0.0.0"]
